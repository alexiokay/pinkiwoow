import{I as m,J as h,K as y,L as l,M as q}from"./entry.2d4efcb3.js";import{a as _}from"./_commonjsHelpers.cebfa718.js";function v(t){throw new Error('Could not dynamically require "'+t+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var n={exports:{}};const S={},w=Object.freeze(Object.defineProperty({__proto__:null,default:S},Symbol.toStringTag,{value:"Module"})),C=_(w);var d=typeof process<"u"&&process.pid?process.pid.toString(36):"",f="";if(typeof __webpack_require__!="function"&&typeof v<"u"){var c="",p=C;if(p.networkInterfaces)var u=p.networkInterfaces();if(u){t:for(let t in u){const e=u[t],r=e.length;for(var i=0;i<r;i++)if(e[i]!==void 0&&e[i].mac&&e[i].mac!="00:00:00:00:00:00"){c=e[i].mac;break t}}f=c?parseInt(c.replace(/\:|\D+/gi,"")).toString(36):""}}n.exports=n.exports.default=function(t,e){return(t||"")+f+d+o().toString(36)+(e||"")};n.exports.process=function(t,e){return(t||"")+d+o().toString(36)+(e||"")};n.exports.time=function(t,e){return(t||"")+o().toString(36)+(e||"")};function o(){var t=Date.now(),e=o.last||t;return o.last=t>e?t:e+1}const g=m();g.use(h);const b=y("cart",{state:()=>({initialized:l("initialized",!1),cart:l("cart",[{id:n.exports(),title:"Koszulka",price:100,price_pln:100,quantity:1,image:"https://picsum.photos/200"},{id:n.exports(),title:"Koszulka",price:100,price_pln:100,quantity:1,image:"https://picsum.photos/200"}])}),getters:{getCart(t){return t.cart},getCartTotal(t){const e=q(g);let r=null;return e.getCurrency==="PLN"?r=t.cart.reduce((s,a)=>s+a.price_pln*a.quantity,0):r=t.cart.reduce((s,a)=>s+a.price*a.quantity,0),r},getCartLength(t){return t.cart.length}},actions:{initialize(){this.initialized=!0},addToCart(t){const e=this.cart.find(r=>r.title===t.title);e?(e.quantity+=1,console.log(e),console.log(this.cart.find(r=>r.title===t.title))):this.cart.push(t)},removeFromCart(t){console.log(t),this.cart=this.cart.filter(e=>e.id!=t),console.log(this.cart)},increaseItemQuantity(t){const e=this.cart.find(r=>r.id===t);e&&e.quantity++},decreaseItemQuantity(t){const e=this.cart.find(r=>r.id===t);e&&e.quantity>2&&e.quantity--},clearCart(){this.cart=[]}},persist:{enabled:!0}});export{n as a,C as r,b as u};
